AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  EnvironmentName:
    Type: String
    Default: dev
    AllowedValues:
      - prd
      - stg
      - dev
    Description: The environment name

  ProjectName:
    Type: String
    Description: The project name

Mappings:
  dev:
    PrivateSubnetA:
      AvailabilityZone: ap-northeast-1a
      CidrBlock: "10.2.1.0/24"
    PrivateSubnetC:
      AvailabilityZone: ap-northeast-1c
      CidrBlock: "10.2.17.0/24"
    PublicSubnetA:
      AvailabilityZone: ap-northeast-1a
      CidrBlock: "10.2.0.0/24"
    PublicSubnetC:
      AvailabilityZone: ap-northeast-1c
      CidrBlock: "10.2.16.0/24"
    VPC:
      CidrBlock: "10.2.0.0/16"

  prd:
    PrivateSubnetA:
      AvailabilityZone: ap-northeast-1a
      CidrBlock: "10.0.1.0/24"
    PrivateSubnetC:
      AvailabilityZone: ap-northeast-1c
      CidrBlock: "10.0.17.0/24"
    PublicSubnetA:
      AvailabilityZone: ap-northeast-1a
      CidrBlock: "10.0.0.0/24"
    PublicSubnetC:
      AvailabilityZone: ap-northeast-1c
      CidrBlock: "10.0.16.0/24"
    VPC:
      CidrBlock: "10.0.0.0/16"

  stg:
    PrivateSubnetA:
      AvailabilityZone: ap-northeast-1a
      CidrBlock: "10.1.1.0/24"
    PrivateSubnetC:
      AvailabilityZone: ap-northeast-1c
      CidrBlock: "10.1.17.0/24"
    PublicSubnetA:
      AvailabilityZone: ap-northeast-1a
      CidrBlock: "10.1.0.0/24"
    PublicSubnetC:
      AvailabilityZone: ap-northeast-1c
      CidrBlock: "10.1.16.0/24"
    VPC:
      CidrBlock: "10.1.0.0/16"

Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !FindInMap
        - Ref: EnvironmentName
        - VPC
        - CidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: env
          Value: !Ref EnvironmentName
        - Key: Name
          Value: !Sub ${EnvironmentName}-${ProjectName}
        - Key: created_by
          Value: cloudformation

  PrivateSubnetA:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !FindInMap
        - Ref: EnvironmentName
        - PrivateSubnetA
        - AvailabilityZone
      CidrBlock: !FindInMap
        - Ref: EnvironmentName
        - PrivateSubnetA
        - CidrBlock
      Tags:
        - Key: env
          Value: !Ref EnvironmentName
        - Key: Name
          Value: !Sub ${EnvironmentName}-${ProjectName}-private-a
        - Key: created_by
          Value: cloudformation
      VpcId: !Ref VPC

  PrivateSubnetC:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !FindInMap
        - Ref: EnvironmentName
        - PrivateSubnetC
        - AvailabilityZone
      CidrBlock: !FindInMap
        - Ref: EnvironmentName
        - PrivateSubnetC
        - CidrBlock
      Tags:
        - Key: env
          Value: !Ref EnvironmentName
        - Key: Name
          Value: !Sub ${EnvironmentName}-${ProjectName}-private-c
        - Key: created_by
          Value: cloudformation
      VpcId: !Ref VPC

  PublicSubnetA:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !FindInMap
        - Ref: EnvironmentName
        - PublicSubnetA
        - AvailabilityZone
      CidrBlock: !FindInMap
        - Ref: EnvironmentName
        - PublicSubnetA
        - CidrBlock
      Tags:
        - Key: env
          Value: !Ref EnvironmentName
        - Key: Name
          Value: !Sub ${EnvironmentName}-${ProjectName}-public-a
        - Key: created_by
          Value: cloudformation
      VpcId: !Ref VPC

  PublicSubnetC:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !FindInMap
        - Ref: EnvironmentName
        - PublicSubnetC
        - AvailabilityZone
      CidrBlock: !FindInMap
        - Ref: EnvironmentName
        - PublicSubnetC
        - CidrBlock
      Tags:
        - Key: env
          Value: !Ref EnvironmentName
        - Key: Name
          Value: !Sub ${EnvironmentName}-${ProjectName}-public-c
        - Key: created_by
          Value: cloudformation
      VpcId: !Ref VPC

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-${ProjectName}-private-route-table

  EndpointSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EndpointSecurityGroup
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !GetAtt VPC.CidrBlock
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-${ProjectName}-endpoint-sg

  EndpointSSM:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ssm
      VpcEndpointType: Interface
      VpcId: !Ref VPC
      SubnetIds:
        - !Ref PrivateSubnetA
        - !Ref PrivateSubnetC
      SecurityGroupIds:
        - !Ref EndpointSecurityGroup

  EndpointSSMMessages:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ssmmessages
      VpcEndpointType: Interface
      VpcId: !Ref VPC
      SubnetIds:
        - !Ref PrivateSubnetA
        - !Ref PrivateSubnetC
      SecurityGroupIds:
        - !Ref EndpointSecurityGroup

  EndpointEC2Messages:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ec2messages
      VpcEndpointType: Interface
      VpcId: !Ref VPC
      SubnetIds:
        - !Ref PrivateSubnetA
        - !Ref PrivateSubnetC
      SecurityGroupIds:
        - !Ref EndpointSecurityGroup

  EndpointS3:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub com.amazonaws.${AWS::Region}.s3
      VpcEndpointType: Gateway
      VpcId: !Ref VPC
      RouteTableIds:
        - !Ref PrivateRouteTable

Outputs:
  VPC:
    Value: !Ref VPC
    Export:
      Name: !Sub ${EnvironmentName}-${ProjectName}-vpc

  PrivateSubnetA:
    Value: !Ref PrivateSubnetA
    Export:
      Name: !Sub ${EnvironmentName}-${ProjectName}-private-subnet-a

  PrivateSubnetC:
    Value: !Ref PrivateSubnetC
    Export:
      Name: !Sub ${EnvironmentName}-${ProjectName}-private-subnet-c

  PublicSubnetA:
    Value: !Ref PublicSubnetA
    Export:
      Name: !Sub ${EnvironmentName}-${ProjectName}-public-subnet-a

  PublicSubnetC:
    Value: !Ref PublicSubnetC
    Export:
      Name: !Sub ${EnvironmentName}-${ProjectName}-public-subnet-c