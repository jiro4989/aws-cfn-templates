AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  AvailabilityZone:
    Type: String
    Default: a
    AllowedValues:
      - a
      - c
    Description: Availability Zone

  EnvironmentName:
    Type: String
    Default: dev
    AllowedValues:
      - prd
      - stg
      - dev
    Description: The environment name

  ProjectName:
    Type: String
    Description: The project name

Resources:
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties: 
      FunctionName: delete-tmp-resource
      Handler: index.handler
      Role: !Ref LambdaIAMRole
      Runtime: python3.9
      Timeout: 10
      Code:
        S3Bucket: lambda.jiro4989.com
        S3Key: ops/delete-tmp-resource.zip
      Tags:
        - Key: Environment
          Value: ops
        - Key: CreatedBy
          Value: cloudformation

  ScheduleEvent:
    Type: AWS::Events::Rule
    Properties:
        Description: ’schedule event for lambda’
        ScheduleExpression: 'cron(0 10 * * ? *)'
        State: ENABLED
        Targets:
          - Arn: !GetAtt LambdaFunction.Arn
            Id: delete-tmp-resource

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties: 
      Action: lambda:InvokeFunction
      FunctionName: !Ref LambdaFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt ScheduleEvent.Arn

  LambdaIAMRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
      Path: /
      RoleName: !Sub ${EnvironmentName}-${ProjectName}-ssm

  LambdaIAMPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "s3:PutObject"
            Resource: !Sub
              - ${Arn}/*
              - Arn: !ImportValue log-bucket-arn
          - Effect: Allow
            Action:
              - "logs:PutLogEvents"
              - "logs:CreateLogStream"
            Resource:
              - "Fn::Sub":
                  - ${Arn}
                  - Arn: !GetAtt EC2LogGroup.Arn
              - "Fn::Sub":
                  - ${Arn}/*
                  - Arn: !GetAtt EC2LogGroup.Arn
      PolicyName: !Sub ${EnvironmentName}-${ProjectName}-ssm
      Roles:
        - Ref: SessionManagerIAMRole